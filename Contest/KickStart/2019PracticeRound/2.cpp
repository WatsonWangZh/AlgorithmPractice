// 题目大意:
// 小明要在连续的N面墙上画画，每面墙画好之后都能得到相应的分数，
// 但是由于天气不好有洪水，每天都会毁掉一面墙，因此小明找找出能得到最高分数的画画方案。
// 注：小明第一次画画时可以随意选择一面墙开始，但是接下来的每一天，他只能画他已画过的部分旁边的新部分。
// 在每一天结束的时候，洪水都会毁掉一面墙，这面墙是没有被画过的且是两头（就是墙的头或者尾部），
// 因为小明用的是防水涂料所以已经画过的部分不会被冲掉。

// 解题思路：
// 能画的墙的长度为N/2（向上取整，即不小于N的最小整数，如3/2=1.5，则取2），
// 无论如何，只要选取了长度为N/2的墙部分，总有办法能把它画完，因此，取窗口大小为N/2的窗口，遍历所有墙面，分数和最大的窗口就是答案。

#include <bits/stdc++.h>
using namespace std;
int main(){
  int T;
  cin >> T;
  for(int k = 1; k <= T; ++k){
    int N;
    cin >> N;
    string s;
    cin >> s;
    vector<int> b(N+1);
    for(int i = 0; i < N; ++i) b[i+1] = b[i] + s[i] - '0';
    int l = (N+1)/2, ret = 0;
    for(int i = 0; i+l-1 < N; ++i){
      ret = max(ret,b[i+l]-b[i]);
    }
    cout << "Case #" << k << ": " << ret << "\n";
  }
  return 0;
}
